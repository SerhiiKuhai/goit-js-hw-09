{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAIC,GACtB,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAG,CAAEH,WAAUC,UAGfG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7CMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAgBC,GACdA,EAAIC,iBAMJ,IAJA,IAAMC,EAAUF,EAAIG,cAAcd,MAAMe,cAClCC,EAASL,EAAIG,cAAcG,KAAKF,cAChCG,EAAWP,EAAIG,cAAcK,OAAOJ,cAEjCK,EAAI,EAAGA,EAAIF,EAAUE,GAAK,EAAG,CAIpCtB,EAHesB,EAAI,EACPP,EAAUG,EAASI,GAG5BC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,QAAQC,IAAI,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OAC1D0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCH,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAGjD6B,OAAM,SAAAP,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,QAAQC,IAAI,sBAAuCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,OACzD0B,EAAA9B,GAAS+B,OAAOG,QACd,sBAAqCL,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAInDW,EAAIG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onForm);\n\nfunction onForm(evt) {\n  evt.preventDefault();\n\n  const onDelay = evt.currentTarget.delay.valueAsNumber;\n  const onStep = evt.currentTarget.step.valueAsNumber;\n  const onAmount = evt.currentTarget.amount.valueAsNumber;\n\n  for (let i = 0; i < onAmount; i += 1) {\n    let position = i + 1;\n    let delay = onDelay + onStep * i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.currentTarget.reset();\n}\n\n//\nfunction createPromise(position, delay) {\n  return new Promise((ok, failed) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        ok({ position, delay });\n      } else {\n        // Reject\n        failed({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","ok","failed","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","onDelay","currentTarget","valueAsNumber","onStep","step","onAmount","amount","i","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.71bbf30f.js.map"}